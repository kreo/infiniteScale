$fh-scale-factor: 0.05 !default;
$fh-scale-levels: 64 !default;
$fh-scale-steps: (
  xxs: 0.5,
  xs: 0.75,
  sm: 1.0,
  md: 1.20,
  lg: 1.5,
  xl: 1.75,
  xxl: 2.0
) !default;

@mixin scale-steps($ctx, $unit) {
  @each $level in $fh-scale-steps {
    $idx: index($fh-scale-steps, $level);
    $key: nth(map-keys($fh-scale-steps), $idx);
    #{$ctx}[fh-scale='#{$key}'] {
      font-size: map-get($fh-scale-steps, $key) + $unit;
    }

    #{$ctx}[fh-scale-root='#{$key}'] {
      font-size: map-get($fh-scale-steps, $key) + rem;
    }

    #{$ctx}[fh-scale-relative='#{$key}'] {
      font-size: map-get($fh-scale-steps, $key) + em;
    }
  }
}

@mixin scale-levels($ctx, $unit) {
  @for $idx from 1 through $fh-scale-levels {
    $size: $fh-scale-factor * $idx;
    #{$ctx}[fh-scale='#{$idx}'] {
      font-size: $size + $unit;
    }

    #{$ctx}[fh-scale-root='#{$idx}'] {
      font-size: $size + rem;
    }

    #{$ctx}[fh-scale-relative='#{$idx}'] {
      font-size: $size + em;
    }
  }
}

@mixin fh-scale($target: self, $unit: em) {
  $ctx: if($target == self, '&', '');
  @include scale-levels($ctx, $unit);
  @include scale-steps($ctx, $unit);
}